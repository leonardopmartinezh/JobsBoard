//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JobsBoard.Server.DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JobBoardEntities : DbContext
    {
        public JobBoardEntities()
            : base("name=JobBoardEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<JobsDel_Result> JobsDel(Nullable<int> jobID, Nullable<bool> estaActivo, Nullable<int> updUsuario)
        {
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            var estaActivoParameter = estaActivo.HasValue ?
                new ObjectParameter("EstaActivo", estaActivo) :
                new ObjectParameter("EstaActivo", typeof(bool));
    
            var updUsuarioParameter = updUsuario.HasValue ?
                new ObjectParameter("UpdUsuario", updUsuario) :
                new ObjectParameter("UpdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobsDel_Result>("JobsDel", jobIDParameter, estaActivoParameter, updUsuarioParameter);
        }
    
        public virtual ObjectResult<JobsSV_Result> JobsSV(Nullable<int> jobID, string jobTitle, string jobDescription, string jobCreatedAt, string jobExpiresAt, Nullable<int> updUsuario)
        {
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var jobDescriptionParameter = jobDescription != null ?
                new ObjectParameter("JobDescription", jobDescription) :
                new ObjectParameter("JobDescription", typeof(string));
    
            var jobCreatedAtParameter = jobCreatedAt != null ?
                new ObjectParameter("JobCreatedAt", jobCreatedAt) :
                new ObjectParameter("JobCreatedAt", typeof(string));
    
            var jobExpiresAtParameter = jobExpiresAt != null ?
                new ObjectParameter("JobExpiresAt", jobExpiresAt) :
                new ObjectParameter("JobExpiresAt", typeof(string));
    
            var updUsuarioParameter = updUsuario.HasValue ?
                new ObjectParameter("UpdUsuario", updUsuario) :
                new ObjectParameter("UpdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobsSV_Result>("JobsSV", jobIDParameter, jobTitleParameter, jobDescriptionParameter, jobCreatedAtParameter, jobExpiresAtParameter, updUsuarioParameter);
        }
    
        public virtual ObjectResult<JobsGET_Result> JobsGET(Nullable<int> jobID)
        {
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobsGET_Result>("JobsGET", jobIDParameter);
        }
    
        public virtual ObjectResult<JobsList_Result> JobsList(Nullable<int> paginacion)
        {
            var paginacionParameter = paginacion.HasValue ?
                new ObjectParameter("Paginacion", paginacion) :
                new ObjectParameter("Paginacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobsList_Result>("JobsList", paginacionParameter);
        }
    
        public virtual ObjectResult<JobsListByID_Result> JobsListByID(Nullable<int> jobID)
        {
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobsListByID_Result>("JobsListByID", jobIDParameter);
        }
    }
}
